name: Compile Games
on: 
  repository_dispatch:
  pull_request: 
      types: [ opened, reopened, synchronize, labeled, unlabeled ] 
      branches: [ main ] 

jobs:
  get-game-directory:
    if: "!contains( github.event.pull_request.labels.*.name, 'compiled')"
    runs-on: ubuntu-latest
    env:
      GAME_DIR:

    outputs:
      game-directory: ${{ steps.get-game-directory.outputs.game-directory }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: get-game-directory
        run: |
          cd $GITHUB_WORKSPACE
          declare DIRECTORIES=($(git diff origin/main...origin/${GITHUB_HEAD_REF} --dirstat=0 --diff-filter=AM games/ | sed 's/^[ 0-9.]\+% //g'))
          GAME_DIR=()
          for dir in "${DIRECTORIES[@]}"
          do
              if [ $(expr length ${dir//[!\/]}) -eq 2  ]; then
                  GAME_DIR+=($dir)
              else 
                echo skipping: $dir 
              fi
          done

          echo "::set-output name=game-directory::${GAME_DIR[@]}"

          echo Games:
          for dir in "${GAME_DIR[@]}"
          do
              echo "$dir"
          done
          echo Games located: "${#GAME_DIR[@]}"

  compile-games-linux:
    runs-on: ubuntu-latest
    needs: get-game-directory
    steps:
      - name: Checkout feature branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
         
      - name: Update Packages
        run: sudo apt-get update

      - name: Install SplashKit
        run: | 
          bash <(curl -s https://raw.githubusercontent.com/splashkit/skm/master/install-scripts/skm-install.sh)
      
      - name: Add splashkit to path
        run: echo "$HOME/.splashkit" >> $GITHUB_PATH
      - name: Install dependencies, compile splashkit
        run: |
          skm linux install

      - name: Compile Game
        run: |
          read GAME_DIR <<< "${{ needs.get-game-directory.outputs.game-directory }}"
          for dir in ${GAME_DIR[@]}
          do                               
            ./compile-game.sh $GITHUB_WORKSPACE/$dir linux-x86.out
          done  

      - uses: actions/upload-artifact@v3
        with:
          name: linux-programs
          path: | 
              **/linux-x86.out

  compile-games-windows:
    runs-on: windows-latest
    needs: get-game-directory
    defaults:
      run:
        shell: msys2 {0}
    
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-cc
        
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install SplashKit
        run: |
              bash <(curl -s https://raw.githubusercontent.com/splashkit/skm/master/install-scripts/skm-install.sh)
      - name: Compile Game
        run: | 
              export PATH=$PATH:/home/runneradmin/.splashkit 
              read GAME_DIR <<< "${{ needs.get-game-directory.outputs.game-directory }}"
              for dir in ${GAME_DIR[@]}
              do                               
                ./compile-game.sh $GITHUB_WORKSPACE/$dir windows-x86.exe
              done                                  
              

      - uses: actions/upload-artifact@v3
        with:
          name: windows-programs
          path: | 
              **/windows-x86.exe

  compile-games-arm:
    runs-on: ubuntu-latest
    needs: get-game-directory
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Splashkit & Compile Game
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: raspios_lite:latest
          image_additional_mb: 4096
          shell: bash
          import_github_env: true
          export_github_env: true
          bind_mount_repository: true
          commands: |            
            read GAME_DIR <<< "${{ needs.get-game-directory.outputs.game-directory }}"
            sudo apt-get update 
            sudo apt install --assume-yes git cmake
            bash <(curl -s https://raw.githubusercontent.com/splashkit/skm/master/install-scripts/skm-install.sh)            
            export PATH=$PATH:$HOME/.splashkit
            sudo apt install --assume-yes libsdl2-dev libsdl2-gfx-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-net-dev libsdl2-image-dev libncurses-dev libpng-dev libcurl4-openssl-dev libbz2-dev libflac-dev libvorbis-dev libmikmod-dev libwebp-dev libfreetype6-dev
            skm linux install                                 
            for dir in ${GAME_DIR[@]}
            do           
              ./compile-game.sh $dir linux-arm.out
            done            

      - uses: actions/upload-artifact@v3
        with:
          name: arm-programs
          path: | 
            **/linux-arm.out

  push-games:
    runs-on: ubuntu-latest
    needs: [get-game-directory, compile-games-linux, compile-games-windows, compile-games-arm]
    steps:
      - name: Checkout feature branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - uses: actions/download-artifact@v3
        with:
          name: windows-programs
          path: ./windows-downloads

      - uses: actions/download-artifact@v3
        with:
          name: linux-programs
          path: ./linux-downloads
      
      - uses: actions/download-artifact@v3
        with:
          name: arm-programs
          path: ./arm-downloads
      
      - name: Files downloaded
        run: |
            FOLDERS=("windows-downloads" "linux-downloads" "arm-downloads")
            for folder in "${FOLDERS[@]}"
            do
              IFS=' ' read -r -a array <<< "${{ needs.get-game-directory.outputs.game-directory }}"
              for element in "${array[@]}"
              do              
                cd $GITHUB_WORKSPACE/$element
                pwd
                ls            
                if [ ! -d "builds" ]; then
                  mkdir builds
                fi              
                IFS='/' read -r -a game_name <<< "$element"
                cd $GITHUB_WORKSPACE/$folder/games/${game_name[-1]}
                pwd
                ls
                if [ -d "builds" ]; then
                  rm -rf builds
                fi
                chmod 777 *
                for filename in *; do
                  echo "$filename"                            
                  IFS='-' read -r -a file_array <<< "$filename"                     
                  unset file_array[-1]
                  unset file_array[-1]
                  S=""
                  for x in "${!file_array[@]}"
                  do              
                    if [ $x == $((${#file_array[@]} - 1)) ]; then
                      S+="${file_array[$x]}"
                    else
                      S+="${file_array[$x]}-"
                    fi
                  done
                  if [ ${game_name[-1]} == $S ]; then
                    cp $filename $GITHUB_WORKSPACE/$element/builds
                  fi
                done
              done
            done

      - name: Git Add, Commit, Push
        run: |
          cd $GITHUB_WORKSPACE          
          git config user.name github-actions
          git config user.email github-actions@github.com
          IFS=' ' read -r -a array <<< "${{ needs.get-game-directory.outputs.game-directory }}"
          for element in "${array[@]}"
          do      
              git add $element/builds
          done
          git commit -m "Compiled Games"
          git push origin HEAD:${GITHUB_HEAD_REF}        

  add-compiled-label:
    needs: push-games
    runs-on: ubuntu-latest
    steps:
      - name: Add label
        uses: andymckay/labeler@master
        with:
          add-labels: "compiled"



  